<!-- Launch file for launching the robot controllers -->
<launch>

    <!--## ARGUMENTS ##-->
    <arg name="load_gripper" default="true" />
    <arg name="controller_type" default="trajectory" />

    <!-- Find right controller arguments -->
    <arg if="$(eval arg('controller_type') == 'effort')" name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joints_effort_control.yaml" />
    <param if="$(eval arg('controller_type') == 'effort')" name="controller_type" value="effort" />
    <arg unless="$(eval arg('controller_type') == 'effort')" name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joints_trajectory_control.yaml" />
    <param unless="$(eval arg('controller_type') == 'effort')" name="controller_type" value="trajectory" />

    <!--################################DEBUG################################-->
    <!--## Manually CHOSE CONTROLLER ##-->

    <!-- Joint Effort control -->
    <!-- <arg name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joint_effort_control.yaml" /> -->

    <!-- Joint Position control -->
    <!-- <arg name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joint_position_control.yaml" /> -->

    <!-- JointGroupPositions control -->
    <!-- <arg name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joints_position_control.yaml" /> -->

    <!-- JointGroupEffort control -->
    <!-- <arg name="controller_file" value="$(find panda_reach_training)/config/panda_effort_joints_effort_control.yaml" /> -->

    <!--## LOAD CONTROLLER ##-->
    <!-- Load controller YAML -->
    <!-- <rosparam file="$(arg controller_file)" command="load" /> -->

    <!-- load the controllers INDIVIDUAL-->
    <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
        joint_state_controller
        panda_joint1_controller panda_joint2_controller
        panda_joint3_controller panda_joint4_controller
        panda_joint5_controller panda_joint6_controller panda_joint7_controller" /> -->

    <!-- load the controllers GROUP-->
    <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" /> -->
    <!-- <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" /> -->

    <!--ADD an effort controller-->
    <!-- Launch robot control node, either AIC or MRAC-->
    <!-- <node pkg="panda_control" type="panda_control_AIC_single" name="panda_control_AIC_single" /> -->

    <!--## LOAD EFFORT COMMAND PUBLISHER ##-->
    <!-- <node pkg="panda_reach_training" type="panda_joint_torques_controller.py" name="panda_joint_torques_controller"/> -->
    <!--################################DEBUG################################-->

    <!--## LOAD CONTROLLER ##-->
    <!-- Load controller YAML -->
    <rosparam file="$(arg controller_file)" command="load" />

    <!-- load the controllers GROUP-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" />
    <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />

</launch>