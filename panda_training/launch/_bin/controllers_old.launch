<!-- Launch file for launching the robot controllers -->
<launch>

    <!--## ARGUMENTS ##-->
    <arg name="load_gripper" default="true" />
    <arg name="robot_control_type" default="joint_trajectory" />

    <!-- Find right controller arguments -->
    <arg if="$(eval arg('robot_control_type') == 'joint_group_position')" name="controller_file" value="$(find panda_training)/cfg/panda_effort_joints_position_control.yaml" />
    <param if="$(eval arg('robot_control_type') == 'joint_group_position')" name="robot_control_type" value="joint_group_effort" />
    <arg if="$(eval arg('robot_control_type') == 'joint_group_effort')" name="controller_file" value="$(find panda_training)/cfg/panda_effort_joints_effort_control.yaml" />
    <arg unless="$(eval arg('robot_control_type') == 'joint_group_effort' and arg('robot_control_type') == 'joint_group_position)" name="controller_file" value="$(find panda_training)/cfg/panda_effort_joints_trajectory_control.yaml" />
    <param unless="$(eval arg('robot_control_type') == 'joint_group_effort' and arg('robot_control_type') == 'joint_group_position)" name="robot_control_type" value="joint_trajectory" />

    <!--## LOAD CONTROLLER ##-->
    <!-- Load controller YAML -->
    <rosparam file="$(arg controller_file)" command="load" />

    <!-- load the controllers GROUP-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" />
    <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />

</launch>